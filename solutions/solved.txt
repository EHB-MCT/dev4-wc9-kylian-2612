Puzzle1.1

    val reader = FileReader();
    val inputs = reader.getPuzzle1()

    var previous = inputs[0];
    var counter = 0;
    inputs.forEach {
        if(it > previous){
            counter++
        }
        previous = it;
        println(counter)
    }

Puzzle1.2

    val reader = FileReader();
    val inputs = reader.getPuzzle1()
    var index = 0;
    var previous = 0;
    var current = 0;
    var counter = 0;
    var i = 0;
    while (i < 1997) {
        previous = inputs[index]+inputs[index+1]+inputs[index+2]
        index++
        current = inputs[index]+inputs[index+1]+inputs[index+2]
        if (current > previous){
            counter++
        }
        i++
    }
    println(counter)

Puzzle2.1
    val reader = FileReader();
    val inputs = reader.getPuzzle2();
    
    var pos= 0;
    var depth = 0;

    inputs.forEach{
      var direction = it[0] as String
      var amount = it[1] as Int

      when(direction){
          "forward" -> pos += amount
          "down" -> depth += amount
          "up" -> depth -= amount
      }
    println(pos*depth)

Puzzle 3.1
val reader= FileReader()
val inputs= reader.getPuzzles3()

var gamma = ""

for(i in 0=< .. =<11){
	var zeroes = 0;
	var ones = 0;
	inputs.forEach{
		if(it[i] == 0) {
			zeroes++
		} else{
			ones++
		}
	}
	
	if (zeroes > ones){
	println("0 is the most
	}
